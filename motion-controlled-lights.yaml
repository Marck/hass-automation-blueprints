blueprint: 
  name: Turn on/off lights based on motion sensor area
  description: Turn lights on or off based on the area the motion sensor is in that detected motion 
    or stopped detecting motion
  domain: automation
  input:
    motion_entities:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
          multiple: true
    no_motion_wait:
      name: No motion wait time
      description: Time to leave the light on after last motion is detected. Used only when turning off the lights.
      default: 0
      selector:
        number:
          min: 0
          max: 1200
          unit_of_measurement: seconds
    sun_elevation_below:
      name: Sun Elevation Below
      description: Target entity will be turned on when Sun elevation is below this value. Sun elevation ranges from -90 to 90.
        degree.
      default: -2
      selector:
        number:
          min: -90
          max: 90
  source_url: https://input-url-here-later-on
mode: restart
max_exceeded: silent
variables:
  motion_entities: !input 'motion_entities'
  no_motion_wait: !input 'no_motion_wait'
  sun_elevation_below: !input 'sun_elevation_below'
trigger:
- platform: state
  entity_id: !input 'motion_entities'
condition: 
- condition: template
  value_template: >
    {{ ((sun_elevation_below or sun_elevation_below == 0) and state_attr('sun.sun', 'elevation') | int(91) <= sun_elevation_below | int(-91)) }}
action:
- delay: >
    {% if int(no_motion_wait) >= 0 and trigger.to_state.state == "off" %}
      {{no_motion_wait}}
    {% else %} 0 {% endif %}
- service: >
    {% if trigger.to_state.state == "on" %}
      light.turn_on
    {% else %}
      light.turn_off
    {% endif %}
  data: {}
  target:
    entity_id: >
      {% if trigger.to_state.state == "on" %}
        {% set sensor_state = "on" %}
        {% set light_state = "off" %}
      {% else %}
        {% set sensor_state = "off" %}
        {% set light_state = "on" %}
      {% endif %}
        {% set areas = states.binary_sensor | selectattr('attributes.device_class', 'defined') 
          | selectattr('entity_id', 'in', motion_entities)
          | selectattr('attributes.device_class', '==', 'motion')
          | selectattr('state', 'eq', sensor_state) | map(attribute='entity_id')
          | map('area_id') | unique | reject('none') | list %}
        {% set ns = namespace(entities=[]) %}
        {% for x in areas %}
          {% set ns.entities = ns.entities + expand(area_entities(x) | select('match', 'light'))
            | selectattr('state', 'eq', light_state) | map(attribute='entity_id') | list %}
        {% endfor %}
        {{ ns.entities }}
